{"version":3,"file":"static/js/main.8af4f6cb.js","mappings":"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","sources":["store/authStore.js","store/appStore.js","hooks/useAIConfig.js","App.js","reportWebVitals.js","index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nconst useAuthStore = create(\n  persist(\n    (set, get) => ({\n      // Estado de autenticación\n      isAuthenticated: false,\n      user: null,\n      accessToken: null,\n      refreshToken: null,\n      isLoading: false,\n      error: null,\n\n      // Función de debug para OAuth\n      debugOAuth: async () => {\n        try {\n          console.log('🔍 === DIAGNÓSTICO OAUTH INICIADO ===');\n          \n          // Verificar contexto de extensión\n          if (!chrome || !chrome.identity) {\n            throw new Error('No se detectó contexto de extensión de Chrome');\n          }\n          \n          // Configuración\n          const clientId = '571791803428-h5qdt3rdtbk3g1p5ut2k8fvioh59h8qp.apps.googleusercontent.com';\n          const redirectUri = chrome.identity.getRedirectURL('google');\n          const extensionId = redirectUri.split('://')[1].split('/')[0];\n          \n          console.log('📋 Configuración detectada:');\n          console.log('- Extension ID (real):', extensionId);\n          console.log('- Client ID:', clientId);\n          console.log('- Redirect URI:', redirectUri);\n          console.log('- Redirect URI esperado en Google Cloud Console:', `https://${extensionId}.chromiumapp.org/google`);\n          \n          // Construir URL de autorización para test\n          const authUrl = 'https://accounts.google.com/o/oauth2/v2/auth?' + \n            new URLSearchParams({\n              client_id: clientId,\n              response_type: 'token',\n              redirect_uri: redirectUri,\n              scope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/documents https://www.googleapis.com/auth/drive.readonly',\n              include_granted_scopes: 'true',\n              prompt: 'consent',\n              access_type: 'online',\n              state: 'debug_test_' + Date.now()\n            }).toString();\n\n          console.log('🔗 Auth URL construida:', authUrl);\n          \n          // Intentar launchWebAuthFlow\n          console.log('🚀 Probando launchWebAuthFlow...');\n          \n          const responseUrl = await new Promise((resolve, reject) => {\n            chrome.identity.launchWebAuthFlow(\n              {\n                url: authUrl,\n                interactive: true\n              },\n              (responseUrl) => {\n                if (chrome.runtime.lastError) {\n                  console.error('❌ Error en launchWebAuthFlow:', chrome.runtime.lastError);\n                  reject(new Error(chrome.runtime.lastError.message || 'Error de autorización'));\n                } else if (!responseUrl) {\n                  reject(new Error('No se recibió URL de respuesta'));\n                } else {\n                  console.log('✅ Response URL recibida:', responseUrl);\n                  resolve(responseUrl);\n                }\n              }\n            );\n          });\n\n          // Analizar respuesta\n          const urlFragment = responseUrl.split('#')[1];\n          if (urlFragment) {\n            const urlParams = new URLSearchParams(urlFragment);\n            const accessToken = urlParams.get('access_token');\n            const error = urlParams.get('error');\n            \n            if (error) {\n              console.error('❌ Error en OAuth:', error, urlParams.get('error_description'));\n              return {\n                success: false,\n                method: 'launchWebAuthFlow',\n                error: `${error}: ${urlParams.get('error_description') || 'Error desconocido'}`,\n                extensionId,\n                clientId,\n                authUrl\n              };\n            }\n            \n            if (accessToken) {\n              console.log('✅ Token obtenido exitosamente');\n              return {\n                success: true,\n                method: 'launchWebAuthFlow',\n                tokenStatus: 'obtenido',\n                responseUrl,\n                extensionId,\n                clientId,\n                authUrl\n              };\n            }\n          }\n          \n          return {\n            success: false,\n            method: 'launchWebAuthFlow',\n            error: 'No se pudo extraer token de la respuesta',\n            responseUrl,\n            extensionId,\n            clientId,\n            authUrl\n          };\n          \n        } catch (error) {\n          console.error('❌ Error en debugOAuth:', error);\n          return {\n            success: false,\n            error: error.message,\n            extensionId: 'No disponible',\n            clientId: '571791803428-gbl2p0i1sab5jk1dd4g9fs2b7rj51nko.apps.googleusercontent.com'\n          };\n        }\n      },\n\n      // Acciones de autenticación\n      login: async () => {\n        set({ isLoading: true, error: null });\n        \n        try {\n          // Verificar que estamos en un contexto de extensión\n          if (!chrome || !chrome.identity) {\n            throw new Error('Esta funcionalidad solo está disponible en extensiones de Chrome');\n          }\n\n          console.log('🔑 Iniciando proceso de autenticación con launchWebAuthFlow...');\n\n          // Configuración OAuth2 para Chrome Extensions\n          const clientId = '571791803428-h5qdt3rdtbk3g1p5ut2k8fvioh59h8qp.apps.googleusercontent.com';\n          const redirectUri = chrome.identity.getRedirectURL('google');\n          const scopes = [\n      'https://www.googleapis.com/auth/userinfo.email',\n      'https://www.googleapis.com/auth/userinfo.profile',\n      'https://www.googleapis.com/auth/documents',\n      'https://www.googleapis.com/auth/drive.readonly'\n    ];\n          \n          console.log('📋 Configuración OAuth:');\n          console.log('- Redirect URI:', redirectUri);\n          console.log('- Client ID:', clientId);\n          console.log('- Scopes:', scopes);\n          \n          // Construir URL de autorización\n          const authUrl = 'https://accounts.google.com/o/oauth2/v2/auth?' + \n            new URLSearchParams({\n              client_id: clientId,\n              response_type: 'token',\n              redirect_uri: redirectUri,\n              scope: scopes.join(' '),\n              include_granted_scopes: 'true',\n              prompt: 'consent', // Forzar pantalla de consentimiento para nuevos permisos\n              access_type: 'online',\n              state: 'franbot_auth_' + Date.now()\n            }).toString();\n\n          console.log('🔗 Auth URL:', authUrl);\n\n          // Usar launchWebAuthFlow para Chrome Extensions\n          const responseUrl = await new Promise((resolve, reject) => {\n            chrome.identity.launchWebAuthFlow(\n              {\n                url: authUrl,\n                interactive: true\n              },\n              (responseUrl) => {\n                if (chrome.runtime.lastError) {\n                  console.error('❌ Chrome runtime error:', chrome.runtime.lastError);\n                  reject(new Error(chrome.runtime.lastError.message || 'Error de autorización'));\n                } else if (!responseUrl) {\n                  reject(new Error('No se recibió URL de respuesta'));\n                } else {\n                  console.log('✅ Response URL recibida:', responseUrl);\n                  resolve(responseUrl);\n                }\n              }\n            );\n          });\n\n          // Extraer el token de acceso de la URL de respuesta\n          const urlFragment = responseUrl.split('#')[1];\n          if (!urlFragment) {\n            throw new Error('No se encontró fragmento en la URL de respuesta');\n          }\n\n          const urlParams = new URLSearchParams(urlFragment);\n          const accessToken = urlParams.get('access_token');\n          const error = urlParams.get('error');\n          \n          if (error) {\n            throw new Error(`Error de OAuth: ${error} - ${urlParams.get('error_description') || 'Error desconocido'}`);\n          }\n          \n          if (!accessToken) {\n            throw new Error('No se pudo obtener el token de acceso');\n          }\n\n          console.log('✅ Access token obtenido exitosamente');\n\n          // Calcular tiempo de expiración (los tokens de Google suelen durar 1 hora)\n          const expiresIn = urlParams.get('expires_in') || '3600'; // 1 hora por defecto\n          const tokenExpiry = Date.now() + (parseInt(expiresIn) * 1000);\n\n          // Guardar token en el almacenamiento local de Chrome para el background script\n          if (chrome && chrome.storage) {\n            try {\n              await new Promise((resolve, reject) => {\n                chrome.storage.local.set({\n                  accessToken: accessToken,\n                  tokenExpiry: tokenExpiry\n                }, () => {\n                  if (chrome.runtime.lastError) {\n                    reject(new Error(chrome.runtime.lastError.message));\n                  } else {\n                    resolve();\n                  }\n                });\n              });\n              console.log('✅ Token guardado en almacenamiento local de Chrome');\n            } catch (error) {\n              console.warn('⚠️ No se pudo guardar el token en almacenamiento local:', error);\n            }\n          }\n\n          // Obtener información del usuario\n          console.log('👤 Obteniendo información del usuario...');\n          const userResponse = await fetch(`https://www.googleapis.com/oauth2/v2/userinfo?access_token=${accessToken}`);\n          \n          if (!userResponse.ok) {\n            throw new Error(`Error al obtener información del usuario: ${userResponse.status}`);\n          }\n          \n          const userInfo = await userResponse.json();\n          console.log('✅ Información del usuario obtenida:', userInfo);\n\n          // Verificar que se obtuvieron los permisos de escritura\n          console.log('🔍 Verificando permisos de escritura...');\n          try {\n            const tokenInfoResponse = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`);\n            if (tokenInfoResponse.ok) {\n              const tokenInfo = await tokenInfoResponse.json();\n              const tokenScopes = tokenInfo.scope ? tokenInfo.scope.split(' ') : [];\n              \n              console.log('📋 Scopes obtenidos:', tokenScopes);\n              \n              const hasWritePermission = tokenScopes.includes('https://www.googleapis.com/auth/documents');\n              if (hasWritePermission) {\n                console.log('✅ Permisos de escritura confirmados');\n              } else {\n                console.warn('⚠️ No se obtuvieron permisos de escritura completos');\n              }\n            }\n          } catch (error) {\n            console.warn('⚠️ No se pudo verificar permisos:', error);\n          }\n\n          set({\n            isAuthenticated: true,\n            user: userInfo,\n            accessToken: accessToken,\n            isLoading: false,\n            error: null\n          });\n\n          return { success: true, user: userInfo };\n        } catch (error) {\n          console.error('❌ Error en login:', error);\n          set({\n            isAuthenticated: false,\n            user: null,\n            accessToken: null,\n            isLoading: false,\n            error: error.message\n          });\n          return { success: false, error: error.message };\n        }\n      },\n\n      logout: async () => {\n        set({ isLoading: true });\n        \n        try {\n          const { accessToken } = get();\n          \n          if (accessToken) {\n            // Revocar el token en Google\n            try {\n              await fetch(`https://oauth2.googleapis.com/revoke?token=${accessToken}`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/x-www-form-urlencoded',\n                },\n              });\n            } catch (error) {\n              console.warn('Error al revocar token:', error);\n            }\n          }\n\n          // Limpiar token del almacenamiento local de Chrome\n          if (chrome && chrome.storage) {\n            try {\n              await new Promise((resolve, reject) => {\n                chrome.storage.local.remove(['accessToken', 'tokenExpiry'], () => {\n                  if (chrome.runtime.lastError) {\n                    reject(new Error(chrome.runtime.lastError.message));\n                  } else {\n                    resolve();\n                  }\n                });\n              });\n              console.log('✅ Token eliminado del almacenamiento local de Chrome');\n            } catch (error) {\n              console.warn('⚠️ No se pudo eliminar el token del almacenamiento local:', error);\n            }\n          }\n\n          set({\n            isAuthenticated: false,\n            user: null,\n            accessToken: null,\n            refreshToken: null,\n            isLoading: false,\n            error: null\n          });\n\n          return { success: true };\n        } catch (error) {\n          set({\n            isLoading: false,\n            error: error.message\n          });\n          return { success: false, error: error.message };\n        }\n      },\n\n      // Verificar si el token sigue siendo válido\n      validateToken: async () => {\n        const { accessToken } = get();\n        \n        if (!accessToken) {\n          return false;\n        }\n\n        try {\n          const response = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`);\n          return response.ok;\n        } catch (error) {\n          return false;\n        }\n      },\n\n      // Verificar permisos específicos del token\n      checkTokenPermissions: async () => {\n        const { accessToken } = get();\n        \n        if (!accessToken) {\n          return { hasPermissions: false, error: 'No hay token de acceso' };\n        }\n\n        try {\n          // Verificar información del token\n          const tokenInfoResponse = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`);\n          \n          if (!tokenInfoResponse.ok) {\n            return { hasPermissions: false, error: 'Token inválido o expirado' };\n          }\n          \n          const tokenInfo = await tokenInfoResponse.json();\n          console.log('🔍 Información del token:', tokenInfo);\n          \n          // Verificar que tenga los scopes necesarios\n          const requiredScopes = [\n        'https://www.googleapis.com/auth/documents',\n        'https://www.googleapis.com/auth/drive.readonly'\n      ];\n          \n          const tokenScopes = tokenInfo.scope ? tokenInfo.scope.split(' ') : [];\n          const hasRequiredScopes = requiredScopes.every(scope => tokenScopes.includes(scope));\n          \n          if (!hasRequiredScopes) {\n            console.warn('⚠️ El token no tiene todos los permisos necesarios');\n            console.log('Scopes requeridos:', requiredScopes);\n            console.log('Scopes del token:', tokenScopes);\n            return { \n              hasPermissions: false, \n              error: 'El token no tiene permisos para acceder a Google Docs. Es necesario renovar la autenticación.',\n              requiredScopes,\n              tokenScopes\n            };\n          }\n          \n          return { hasPermissions: true, tokenInfo, tokenScopes };\n          \n        } catch (error) {\n          console.error('❌ Error al verificar permisos del token:', error);\n          return { hasPermissions: false, error: error.message };\n        }\n      },\n\n      // Renovar autenticación con permisos completos\n      renewAuthentication: async () => {\n        console.log('🔄 Renovando autenticación con permisos completos...');\n        \n        // Primero hacer logout para limpiar el token actual\n        await get().logout();\n        \n        // Luego hacer login nuevamente\n        return await get().login();\n      },\n\n      // Limpiar errores\n      clearError: () => set({ error: null }),\n\n      // Actualizar información del usuario\n      updateUser: (userData) => set({ user: { ...get().user, ...userData } }),\n    }),\n    {\n      name: 'franbot-auth-storage',\n      partialize: (state) => ({\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        accessToken: state.accessToken,\n        refreshToken: state.refreshToken,\n      }),\n    }\n  )\n);\n\nexport default useAuthStore;","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nconst useAppStore = create(\n  persist(\n    (set, get) => ({\n      // Estado de la aplicación\n      currentTab: null,\n      chatHistory: [],\n      isProcessing: false,\n      settings: {\n        theme: 'light',\n        language: 'es',\n        autoAnalyze: true,\n        notifications: true,\n      },\n\n      // Acciones para tabs\n      setCurrentTab: (tab) => set({ currentTab: tab }),\n      \n      getCurrentTabInfo: async () => {\n        try {\n          const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n          set({ currentTab: tab });\n          return tab;\n        } catch (error) {\n          console.error('Error getting current tab:', error);\n          return null;\n        }\n      },\n\n      // Acciones para chat\n      addMessage: (message) => {\n        const newMessage = {\n          id: Date.now(),\n          timestamp: new Date().toISOString(),\n          ...message\n        };\n        set(state => ({\n          chatHistory: [...state.chatHistory, newMessage]\n        }));\n      },\n\n      clearChatHistory: () => set({ chatHistory: [] }),\n\n      updateLastMessage: (messageId, updates) => {\n        set(state => ({\n          chatHistory: state.chatHistory.map(msg =>\n            msg.id === messageId ? { ...msg, ...updates } : msg\n          )\n        }));\n      },\n\n      // Acciones para procesamiento\n      setProcessing: (isProcessing) => set({ isProcessing }),\n\n      // Acciones para configuración\n      updateSettings: (newSettings) => {\n        set(state => ({\n          settings: { ...state.settings, ...newSettings }\n        }));\n      },\n\n      resetSettings: () => {\n        set({\n          settings: {\n            theme: 'light',\n            language: 'es',\n            autoAnalyze: true,\n            notifications: true,\n          }\n        });\n      },\n\n      // Análisis de contenido web\n      analyzeCurrentPage: async () => {\n        set({ isProcessing: true });\n        \n        try {\n          const tab = await get().getCurrentTabInfo();\n          \n          if (!tab) {\n            throw new Error('No se pudo obtener información de la pestaña actual');\n          }\n\n          // Ejecutar script de contenido para extraer información\n          const results = await chrome.tabs.sendMessage(tab.id, {\n            action: 'extractPageContent'\n          });\n\n          const analysisMessage = {\n            type: 'analysis',\n            sender: 'system',\n            content: {\n              url: tab.url,\n              title: tab.title,\n              ...results\n            }\n          };\n\n          get().addMessage(analysisMessage);\n          \n          set({ isProcessing: false });\n          return analysisMessage;\n        } catch (error) {\n          console.error('Error analyzing page:', error);\n          set({ isProcessing: false });\n          \n          const errorMessage = {\n            type: 'error',\n            sender: 'system',\n            content: {\n              error: error.message\n            }\n          };\n          \n          get().addMessage(errorMessage);\n          return errorMessage;\n        }\n      },\n\n      // Utilidades\n      exportChatHistory: () => {\n        const { chatHistory } = get();\n        const dataStr = JSON.stringify(chatHistory, null, 2);\n        const dataBlob = new Blob([dataStr], { type: 'application/json' });\n        \n        const url = URL.createObjectURL(dataBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `franbot-chat-${new Date().toISOString().split('T')[0]}.json`;\n        link.click();\n        \n        URL.revokeObjectURL(url);\n      },\n\n      importChatHistory: (jsonData) => {\n        try {\n          const history = JSON.parse(jsonData);\n          set({ chatHistory: history });\n          return { success: true };\n        } catch (error) {\n          return { success: false, error: error.message };\n        }\n      },\n    }),\n    {\n      name: 'franbot-app-storage',\n      partialize: (state) => ({\n        chatHistory: state.chatHistory,\n        settings: state.settings,\n      }),\n    }\n  )\n);\n\nexport default useAppStore;","import { useState, useEffect } from 'react';\n\n// Configuración de modelos por proveedor\nconst AI_PROVIDERS = {\n  openai: {\n    name: 'OpenAI',\n    models: ['gpt-4', 'gpt-4-turbo', 'gpt-3.5-turbo']\n  },\n  anthropic: {\n    name: 'Anthropic',\n    models: ['claude-3-opus', 'claude-3-sonnet', 'claude-3-haiku']\n  },\n  google: {\n    name: 'Google',\n    models: ['gemini-pro', 'gemini-pro-vision', 'gemini-1.5-pro']\n  }\n};\n\nexport const useAIConfig = () => {\n  // Estados para configuración de IA con valores por defecto\n  const [aiProvider, setAiProvider] = useState('openai');\n  const [selectedModel, setSelectedModel] = useState('gpt-4');\n  const [apiKey, setApiKey] = useState('');\n\n  // Estados temporales para los inputs (no guardados hasta validar)\n  const [tempAiProvider, setTempAiProvider] = useState('openai');\n  const [tempSelectedModel, setTempSelectedModel] = useState('gpt-4');\n  const [tempApiKey, setTempApiKey] = useState('');\n\n  // Estados para validación y guardado\n  const [isValidatingApi, setIsValidatingApi] = useState(false);\n  const [apiValidationStatus, setApiValidationStatus] = useState(null); // null, 'success', 'error'\n  const [validationMessage, setValidationMessage] = useState('');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  // Inicializar valores por defecto y cargar configuración desde localStorage\n  useEffect(() => {\n    const initializeDefaults = () => {\n      // Valores por defecto\n      const defaultProvider = 'openai';\n      const defaultModel = AI_PROVIDERS[defaultProvider].models[0]; // 'gpt-4'\n      const defaultApiKey = '';\n\n      // Obtener valores guardados o usar por defecto\n      const savedProvider = localStorage.getItem('franbot_ai_provider') || defaultProvider;\n      const savedModel = localStorage.getItem('franbot_ai_model') || defaultModel;\n      const savedApiKey = localStorage.getItem('franbot_api_key') || defaultApiKey;\n\n      // Validar que el proveedor guardado existe\n      const validProvider = AI_PROVIDERS[savedProvider] ? savedProvider : defaultProvider;\n      \n      // Validar que el modelo guardado existe para el proveedor\n      const validModel = AI_PROVIDERS[validProvider].models.includes(savedModel) \n        ? savedModel \n        : AI_PROVIDERS[validProvider].models[0];\n\n      // Establecer estados guardados\n      setAiProvider(validProvider);\n      setSelectedModel(validModel);\n      setApiKey(savedApiKey);\n\n      // Establecer estados temporales (para los inputs)\n      setTempAiProvider(validProvider);\n      setTempSelectedModel(validModel);\n      setTempApiKey(savedApiKey);\n\n      // Guardar valores por defecto en localStorage si no existían\n      if (!localStorage.getItem('franbot_ai_provider')) {\n        localStorage.setItem('franbot_ai_provider', validProvider);\n      }\n      if (!localStorage.getItem('franbot_ai_model')) {\n        localStorage.setItem('franbot_ai_model', validModel);\n      }\n      if (!localStorage.getItem('franbot_api_key')) {\n        localStorage.setItem('franbot_api_key', defaultApiKey);\n      }\n\n      // Asegurar consistencia si los valores guardados no son válidos\n      if (validProvider !== savedProvider || validModel !== savedModel) {\n        localStorage.setItem('franbot_ai_provider', validProvider);\n        localStorage.setItem('franbot_ai_model', validModel);\n      }\n    };\n\n    initializeDefaults();\n  }, []);\n\n  // Guardar configuración en localStorage cuando cambie\n  const saveAiConfig = (provider, model, key) => {\n    localStorage.setItem('franbot_ai_provider', provider);\n    localStorage.setItem('franbot_ai_model', model);\n    localStorage.setItem('franbot_api_key', key);\n  };\n\n  // Manejar cambio de proveedor temporal\n  const handleTempProviderChange = (newProvider) => {\n    setTempAiProvider(newProvider);\n    const firstModel = AI_PROVIDERS[newProvider].models[0];\n    setTempSelectedModel(firstModel);\n    setHasUnsavedChanges(true);\n    setApiValidationStatus(null);\n    setValidationMessage('');\n  };\n\n  // Manejar cambio de modelo temporal\n  const handleTempModelChange = (newModel) => {\n    setTempSelectedModel(newModel);\n    setHasUnsavedChanges(true);\n    setApiValidationStatus(null);\n    setValidationMessage('');\n  };\n\n  // Manejar cambio de API key temporal\n  const handleTempApiKeyChange = (newApiKey) => {\n    setTempApiKey(newApiKey);\n    setHasUnsavedChanges(true);\n    setApiValidationStatus(null);\n    setValidationMessage('');\n  };\n\n  // Función para probar la API usando llamadas directas a cada proveedor\n  const testApiConnection = async () => {\n    console.log('🔍 [API Test] Iniciando validación de API');\n    console.log('📋 [API Test] Configuración:', {\n      provider: tempAiProvider,\n      model: tempSelectedModel,\n      hasApiKey: !!tempApiKey.trim()\n    });\n\n    if (!tempApiKey.trim()) {\n      console.log('❌ [API Test] Error: API key vacía');\n      setApiValidationStatus('error');\n      setValidationMessage('Por favor, ingresa una API key válida');\n      return false;\n    }\n\n    setIsValidatingApi(true);\n    setApiValidationStatus(null);\n    setValidationMessage('Probando conexión con la API...');\n    console.log('⏳ [API Test] Iniciando prueba de conexión...');\n\n    try {\n      let response;\n      \n      console.log(`🔧 [API Test] Configurando proveedor: ${tempAiProvider}`);\n      \n      if (tempAiProvider === 'openai') {\n        console.log('🤖 [API Test] Probando OpenAI API...');\n        \n        const requestBody = {\n          model: tempSelectedModel,\n          messages: [\n            {\n              role: \"user\",\n              content: \"Responde solo con 'OK' si puedes leer este mensaje.\"\n            }\n          ],\n          max_tokens: 10,\n          temperature: 0\n        };\n\n        console.log('📤 [API Test] Enviando request a OpenAI:', requestBody);\n\n        response = await fetch('https://api.openai.com/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${tempApiKey}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(requestBody)\n        });\n\n        console.log('📥 [API Test] Response status:', response.status);\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.log('❌ [API Test] Error response:', errorData);\n          throw new Error(`OpenAI API Error: ${errorData.error?.message || response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log('📥 [API Test] OpenAI response:', data);\n\n        if (data.choices && data.choices[0] && data.choices[0].message) {\n          console.log('✅ [API Test] OpenAI prueba exitosa!');\n          setApiValidationStatus('success');\n          setValidationMessage('✅ API de OpenAI configurada correctamente');\n          return true;\n        } else {\n          throw new Error('Respuesta inválida de OpenAI API');\n        }\n\n      } else if (tempAiProvider === 'anthropic') {\n        console.log('🧠 [API Test] Probando Anthropic API...');\n        \n        const requestBody = {\n          model: tempSelectedModel,\n          max_tokens: 10,\n          messages: [\n            {\n              role: \"user\",\n              content: \"Responde solo con 'OK' si puedes leer este mensaje.\"\n            }\n          ]\n        };\n\n        console.log('📤 [API Test] Enviando request a Anthropic:', requestBody);\n\n        response = await fetch('https://api.anthropic.com/v1/messages', {\n          method: 'POST',\n          headers: {\n            'x-api-key': tempApiKey,\n            'Content-Type': 'application/json',\n            'anthropic-version': '2023-06-01'\n          },\n          body: JSON.stringify(requestBody)\n        });\n\n        console.log('📥 [API Test] Response status:', response.status);\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.log('❌ [API Test] Error response:', errorData);\n          throw new Error(`Anthropic API Error: ${errorData.error?.message || response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log('📥 [API Test] Anthropic response:', data);\n\n        if (data.content && data.content[0] && data.content[0].text) {\n          console.log('✅ [API Test] Anthropic prueba exitosa!');\n          setApiValidationStatus('success');\n          setValidationMessage('✅ API de Anthropic configurada correctamente');\n          return true;\n        } else {\n          throw new Error('Respuesta inválida de Anthropic API');\n        }\n\n      } else if (tempAiProvider === 'google') {\n        console.log('🔍 [API Test] Probando Google Gemini API...');\n        \n        const requestBody = {\n          contents: [\n            {\n              parts: [\n                {\n                  text: \"Responde solo con 'OK' si puedes leer este mensaje.\"\n                }\n              ]\n            }\n          ],\n          generationConfig: {\n            maxOutputTokens: 10,\n            temperature: 0\n          }\n        };\n\n        console.log('📤 [API Test] Enviando request a Google:', requestBody);\n\n        response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/${tempSelectedModel}:generateContent?key=${tempApiKey}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(requestBody)\n        });\n\n        console.log('📥 [API Test] Response status:', response.status);\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          console.log('❌ [API Test] Error response:', errorData);\n          throw new Error(`Google API Error: ${errorData.error?.message || response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log('📥 [API Test] Google response:', data);\n\n        if (data.candidates && data.candidates[0] && data.candidates[0].content) {\n          console.log('✅ [API Test] Google prueba exitosa!');\n          setApiValidationStatus('success');\n          setValidationMessage('✅ API de Google configurada correctamente');\n          return true;\n        } else {\n          throw new Error('Respuesta inválida de Google API');\n        }\n      }\n\n    } catch (error) {\n      console.error('❌ [API Test] Error durante la prueba:', error);\n      console.log('🔍 [API Test] Detalles del error:', {\n        message: error.message,\n        name: error.name\n      });\n      \n      setApiValidationStatus('error');\n      \n      if (error.message.includes('401') || error.message.includes('unauthorized') || error.message.includes('invalid_api_key')) {\n        console.log('🔑 [API Test] Error de autenticación detectado');\n        setValidationMessage('❌ API key inválida o sin permisos');\n      } else if (error.message.includes('404') || error.message.includes('not found') || error.message.includes('model_not_found')) {\n        console.log('🔍 [API Test] Modelo no encontrado');\n        setValidationMessage('❌ Modelo no encontrado o no disponible');\n      } else if (error.message.includes('quota') || error.message.includes('limit') || error.message.includes('rate_limit')) {\n        console.log('💰 [API Test] Límite de cuota excedido');\n        setValidationMessage('❌ Límite de cuota excedido');\n      } else if (error.message.includes('CORS') || error.message.includes('fetch')) {\n        console.log('🌐 [API Test] Error de conexión');\n        setValidationMessage('❌ Error de conexión con la API');\n      } else {\n        console.log('❓ [API Test] Error desconocido');\n        setValidationMessage(`❌ Error: ${error.message}`);\n      }\n      return false;\n    } finally {\n      setIsValidatingApi(false);\n      console.log('🏁 [API Test] Finalizando validación de API');\n    }\n  };\n\n  // Función para guardar la configuración después de validar\n  const saveConfiguration = async () => {\n    console.log('💾 [Save Config] Iniciando proceso de guardado');\n    console.log('📋 [Save Config] Configuración a guardar:', {\n      provider: tempAiProvider,\n      model: tempSelectedModel,\n      hasApiKey: !!tempApiKey.trim()\n    });\n\n    const isValid = await testApiConnection();\n    \n    if (isValid) {\n      console.log('✅ [Save Config] API validada, guardando configuración...');\n      \n      // Guardar en estados principales\n      setAiProvider(tempAiProvider);\n      setSelectedModel(tempSelectedModel);\n      setApiKey(tempApiKey);\n      \n      // Guardar en localStorage\n      saveAiConfig(tempAiProvider, tempSelectedModel, tempApiKey);\n      \n      setHasUnsavedChanges(false);\n      setValidationMessage('✅ Configuración guardada exitosamente');\n      \n      console.log('💾 [Save Config] Configuración guardada exitosamente en localStorage');\n      console.log('📋 [Save Config] Estados actualizados:', {\n        provider: tempAiProvider,\n        model: tempSelectedModel,\n        hasUnsavedChanges: false\n      });\n    } else {\n      console.log('❌ [Save Config] API no válida, no se guardó la configuración');\n    }\n  };\n\n  // Resetear configuración a valores por defecto\n  const resetToDefaults = () => {\n    const defaultProvider = 'openai';\n    const defaultModel = AI_PROVIDERS[defaultProvider].models[0];\n    const defaultApiKey = '';\n\n    // Resetear estados principales\n    setAiProvider(defaultProvider);\n    setSelectedModel(defaultModel);\n    setApiKey(defaultApiKey);\n\n    // Resetear estados temporales\n    setTempAiProvider(defaultProvider);\n    setTempSelectedModel(defaultModel);\n    setTempApiKey(defaultApiKey);\n\n    // Resetear estados de validación\n    setApiValidationStatus(null);\n    setValidationMessage('');\n    setHasUnsavedChanges(false);\n\n    // Limpiar localStorage\n    localStorage.removeItem('franbot_ai_provider');\n    localStorage.removeItem('franbot_ai_model');\n    localStorage.removeItem('franbot_api_key');\n\n    // Guardar valores por defecto\n    saveAiConfig(defaultProvider, defaultModel, defaultApiKey);\n  };\n\n  return {\n    // Estados principales\n    aiProvider,\n    selectedModel,\n    apiKey,\n    \n    // Estados temporales\n    tempAiProvider,\n    tempSelectedModel,\n    tempApiKey,\n    \n    // Estados de validación\n    isValidatingApi,\n    apiValidationStatus,\n    validationMessage,\n    hasUnsavedChanges,\n    \n    // Configuración\n    aiProviders: AI_PROVIDERS,\n    \n    // Funciones\n    handleTempProviderChange,\n    handleTempModelChange,\n    handleTempApiKeyChange,\n    testApiConnection,\n    saveConfiguration,\n    resetToDefaults\n  };\n};","import React, { useState, useEffect } from 'react';\nimport { useAuthStore, useAppStore } from './store';\nimport { useAIConfig } from './hooks/useAIConfig';\nimport './App.css';\n\nfunction App() {\n  const { \n    isAuthenticated, \n    user, \n    isLoading: authLoading, \n    error: authError,\n    login, \n    logout, \n    validateToken,\n    clearError,\n    debugOAuth \n  } = useAuthStore();\n  \n  const { \n    currentTab, \n    addMessage, \n    getCurrentTabInfo,\n    clearChatHistory \n  } = useAppStore();\n\n  // Hook personalizado para configuración de IA\n  const {\n    aiProvider,\n    selectedModel,\n    apiKey,\n    tempAiProvider,\n    tempSelectedModel,\n    tempApiKey,\n    isValidatingApi,\n    apiValidationStatus,\n    validationMessage,\n    hasUnsavedChanges,\n    aiProviders,\n    handleTempProviderChange,\n    handleTempModelChange,\n    handleTempApiKeyChange,\n    testApiConnection,\n    saveConfiguration,\n    resetToDefaults\n  } = useAIConfig();\n\n  const [isGoogleDocs, setIsGoogleDocs] = useState(false);\n\n\n\n  // Verificar si estamos en Google Docs\n  const checkGoogleDocs = () => {\n    if (currentTab && currentTab.url) {\n      const isGoogleDocsUrl = currentTab.url.includes('docs.google.com/document/') ||\n                             currentTab.url.includes('docs.google.com/spreadsheets/') ||\n                             currentTab.url.includes('docs.google.com/presentation/');\n      setIsGoogleDocs(isGoogleDocsUrl);\n    }\n  };\n\n  // Verificar autenticación al cargar\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (isAuthenticated) {\n        const isValid = await validateToken();\n        if (!isValid) {\n          logout();\n        }\n      }\n      \n      // Obtener información de la pestaña actual\n      await getCurrentTabInfo();\n    };\n    \n    checkAuth();\n  }, []);\n\n  // Verificar Google Docs cuando cambie la información de la pestaña\n  useEffect(() => {\n    checkGoogleDocs();\n  }, [currentTab]);\n\n  const handleDebugOAuth = async () => {\n    addMessage({\n      text: '🔍 Iniciando diagnóstico OAuth...',\n      sender: 'bot',\n      type: 'info'\n    });\n    \n    const result = await debugOAuth();\n    \n    if (result.success) {\n      let message = `✅ Debug OAuth exitoso!\\n\\n📋 Información:\\n- Extension ID: ${result.extensionId}\\n- Client ID: ${result.clientId}\\n- Método: ${result.method}`;\n      \n      if (result.method === 'getAuthToken') {\n        message += `\\n- Token obtenido: ${result.token ? 'Sí' : 'No'}`;\n      } else if (result.method === 'launchWebAuthFlow') {\n        message += `\\n- Response URL: ${result.responseUrl ? 'Sí' : 'No'}`;\n        message += `\\n- Auth URL: ${result.authUrl}`;\n      }\n      \n      addMessage({\n        text: message,\n        sender: 'bot',\n        type: 'success'\n      });\n    } else {\n      let message = `❌ Debug OAuth falló:\\n\\n🔍 Información de debug:\\n- Extension ID: ${result.extensionId || 'No disponible'}\\n- Client ID: ${result.clientId || 'No disponible'}\\n- Método: ${result.method || 'No especificado'}\\n- Error: ${result.error}`;\n      \n      if (result.authUrl) {\n        message += `\\n- Auth URL: ${result.authUrl}`;\n      }\n      \n      message += `\\n\\n💡 Pasos siguientes:\\n1. Verifica la configuración en Google Cloud Console\\n2. Asegúrate de que el Extension ID esté correcto\\n3. Recarga la extensión y vuelve a intentar`;\n      \n      addMessage({\n        text: message,\n        sender: 'bot',\n        type: 'error'\n      });\n    }\n  };\n\n  const handleLogin = async () => {\n    clearError();\n    const result = await login();\n    \n    if (result.success) {\n      // Agregar mensaje de bienvenida\n      addMessage({\n        text: `¡Hola ${result.user.name}! Bienvenido a Franbot. Ahora puedes usar todas las funciones avanzadas.`,\n        sender: 'bot',\n        type: 'welcome'\n      });\n    }\n  };\n\n  const handleLogout = async () => {\n    await logout();\n    clearChatHistory();\n    addMessage({\n      text: 'Has cerrado sesión. Algunas funciones estarán limitadas hasta que vuelvas a iniciar sesión.',\n      sender: 'bot',\n      type: 'info'\n    });\n  };\n\n\n\n  if (authLoading) {\n    return (\n      <div className=\"franbot-container\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\">\n            <div className=\"spinner\"></div>\n          </div>\n          <div className=\"loading-text\">\n            <h3>Franbot Assistant</h3>\n            <p>Iniciando tu asistente inteligente...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"franbot-container\">\n      {/* Verificar si estamos en Google Docs */}\n      {!isGoogleDocs ? (\n        <div className=\"google-docs-required\">\n          <div className=\"restriction-content\">\n            <div className=\"restriction-icon\">\n              <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n              </svg>\n            </div>\n            <h2>Franbot Assistant</h2>\n            <p>Esta extensión solo puede ser utilizada en Google Docs.</p>\n            <p>Por favor, abre un documento de Google Docs, Sheets o Presentations para usar Franbot.</p>\n            <div className=\"supported-apps\">\n              <div className=\"app-item\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z\"/>\n                </svg>\n                <span>Google Docs</span>\n              </div>\n              <div className=\"app-item\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19,3H5C3.9,3 3,3.9 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.9 20.1,3 19,3M19,19H5V5H19V19M7,7H17V9H7V7M7,11H17V13H7V11M7,15H14V17H7V15Z\"/>\n                </svg>\n                <span>Google Sheets</span>\n              </div>\n              <div className=\"app-item\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19,3H5C3.9,3 3,3.9 3,5V19C3,20.1 3.9,21 5,21H19C20.1,21 21,20.1 21,19V5C21,3.9 20.1,3 19,3M19,19H5V5H19V19M17,12H7V10H17V12Z\"/>\n                </svg>\n                <span>Google Presentations</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <>\n          {/* Header moderno */}\n          <div className=\"franbot-header\">\n            <div className=\"header-content\">\n              <div className=\"brand\">\n                <div className=\"brand-icon\">\n                  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2ZM21 9V7L15 1H5C3.89 1 3 1.89 3 3V19C3 20.1 3.9 21 5 21H11V19H5V3H13V9H21ZM14 10V12H16V10H14ZM16 14H14V16H16V14ZM20 15L18 17H22L20 15ZM20 10V8L18 10H22L20 10Z\"/>\n                  </svg>\n                </div>\n                <div className=\"brand-text\">\n                  <h1>Franbot</h1>\n                  <span>AI Assistant</span>\n                </div>\n              </div>\n              \n              <div className=\"header-actions\">\n                {isAuthenticated ? (\n                  <div className=\"user-profile\">\n                    <img src={user?.picture} alt={user?.name} className=\"user-avatar\" />\n                    <div className=\"user-info\">\n                      <span className=\"user-name\">{user?.name}</span>\n                      <span className=\"user-status\">Conectado</span>\n                    </div>\n                    <button onClick={handleLogout} className=\"logout-btn\" title=\"Cerrar sesión\">\n                      <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z\"/>\n                      </svg>\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"auth-actions\">\n                    <button onClick={handleLogin} className=\"login-btn\">\n                      <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                        <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                        <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                        <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                      </svg>\n                      Iniciar con Google\n                    </button>\n                    <button onClick={handleDebugOAuth} className=\"debug-btn\" title=\"Debug OAuth\">\n                      <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\"/>\n                      </svg>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Error message mejorado */}\n          {authError && (\n            <div className=\"error-banner\">\n              <div className=\"error-content\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"error-icon\">\n                  <path d=\"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"/>\n                </svg>\n                <span>{authError}</span>\n              </div>\n              <button onClick={clearError} className=\"error-close\">\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"/>\n                </svg>\n              </button>\n            </div>\n          )}\n\n\n\n          {/* Contenido principal */}\n          <div className=\"main-content\">\n            {/* Configuración */}\n            <div className=\"settings-section\">\n                <div className=\"settings-group\">\n                  <h3>Configuración de IA</h3>\n                  \n                  {/* Selector de Proveedor */}\n                  <div className=\"setting-item\">\n                    <label htmlFor=\"ai-provider\">Proveedor de IA</label>\n                    <select \n                      id=\"ai-provider\"\n                      className=\"setting-select\"\n                      value={tempAiProvider}\n                      onChange={(e) => handleTempProviderChange(e.target.value)}\n                    >\n                      <option value=\"openai\">OpenAI</option>\n                      <option value=\"anthropic\">Anthropic</option>\n                      <option value=\"google\">Google</option>\n                    </select>\n                  </div>\n\n                  {/* Selector de Modelo */}\n                  <div className=\"setting-item\">\n                    <label htmlFor=\"ai-model\">Modelo</label>\n                    <select \n                      id=\"ai-model\"\n                      className=\"setting-select\"\n                      value={tempSelectedModel}\n                      onChange={(e) => handleTempModelChange(e.target.value)}\n                    >\n                      {aiProviders[tempAiProvider].models.map(model => (\n                        <option key={model} value={model}>{model}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  {/* Input de API Key */}\n                  <div className=\"setting-item\">\n                    <label htmlFor=\"api-key\">API Key</label>\n                    <div className=\"api-key-container\">\n                      <input\n                        id=\"api-key\"\n                        type=\"password\"\n                        className=\"setting-input api-key-input\"\n                        placeholder={`Ingresa tu API key de ${aiProviders[tempAiProvider].name}`}\n                        value={tempApiKey}\n                        onChange={(e) => handleTempApiKeyChange(e.target.value)}\n                      />\n                      <div className=\"api-key-status\">\n                        {apiValidationStatus === 'success' ? (\n                          <span className=\"status-configured\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                              <path d=\"M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z\"/>\n                            </svg>\n                            Validado\n                          </span>\n                        ) : apiValidationStatus === 'error' ? (\n                          <span className=\"status-error\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                              <path d=\"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"/>\n                            </svg>\n                            Error\n                          </span>\n                        ) : tempApiKey ? (\n                          <span className=\"status-pending\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                              <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4M12,6A6,6 0 0,1 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6Z\"/>\n                            </svg>\n                            Pendiente\n                          </span>\n                        ) : (\n                          <span className=\"status-missing\">\n                            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                              <path d=\"M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\"/>\n                            </svg>\n                            Requerido\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <small className=\"setting-help\">\n                      Tu API key se almacena localmente y nunca se comparte.\n                    </small>\n                  </div>\n\n                  {/* Mensaje de validación */}\n                  {validationMessage && (\n                    <div className={`validation-message ${apiValidationStatus}`}>\n                      {validationMessage}\n                    </div>\n                  )}\n\n                  {/* Botones de acción */}\n                  <div className=\"setting-actions\">\n                    <button \n                      onClick={saveConfiguration}\n                      className={`save-btn ${hasUnsavedChanges ? 'has-changes' : ''}`}\n                      disabled={isValidatingApi || !tempApiKey.trim()}\n                      title=\"Probar API y guardar configuración\"\n                    >\n                      {isValidatingApi ? (\n                        <>\n                          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"spinning\">\n                            <path d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\"/>\n                          </svg>\n                          Probando...\n                        </>\n                      ) : (\n                        <>\n                          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                            <path d=\"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\"/>\n                          </svg>\n                          {hasUnsavedChanges ? 'Probar y Guardar' : 'Configuración Guardada'}\n                        </>\n                      )}\n                    </button>\n\n                    <button \n                      onClick={resetToDefaults}\n                      className=\"reset-btn\"\n                      title=\"Restaurar configuración por defecto\"\n                    >\n                      <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M12,4C14.1,4 16.1,4.8 17.6,6.3C20.7,9.4 20.7,14.5 17.6,17.6C15.8,19.5 13.3,20.2 10.9,19.9L11.4,17.9C13.1,18.1 14.9,17.5 16.2,16.2C18.5,13.9 18.5,10.1 16.2,7.7C15.1,6.6 13.5,6 12,6V10.5L7,5.5L12,0.5V4M6.3,17.6C3.7,15 3.3,11 5.1,7.9L6.6,9.4C5.5,11.6 5.9,14.4 7.8,16.2C8.3,16.7 8.9,17.1 9.6,17.4L9,19.4C8,19 7.1,18.4 6.3,17.6Z\"/>\n                      </svg>\n                      Restaurar por defecto\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"settings-group\">\n                  <h3>Privacidad</h3>\n                  <div className=\"setting-item\">\n                    <label>\n                      <input type=\"checkbox\" defaultChecked />\n                      Enviar datos de errores\n                    </label>\n                  </div>\n                </div>\n\n                <div className=\"settings-group\">\n                  <h3>Acerca de</h3>\n                  <div className=\"about-info\">\n                    <p><strong>Franbot Assistant</strong></p>\n                    <p>Versión 1.0.0</p>\n                    <p>Tu asistente inteligente para Google Docs</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n        </>\n      )}\n    </div>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// The chunk loading function for additional chunks\n// Since all referenced chunks are already included\n// in this file, this function is empty here.\n__webpack_require__.e = () => (Promise.resolve());","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfranbot_extension\"] = self[\"webpackChunkfranbot_extension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(551)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["create","persist","set","get","isAuthenticated","user","accessToken","refreshToken","isLoading","error","debugOAuth","async","console","log","chrome","identity","Error","clientId","redirectUri","getRedirectURL","extensionId","split","authUrl","URLSearchParams","client_id","response_type","redirect_uri","scope","include_granted_scopes","prompt","access_type","state","Date","now","toString","responseUrl","Promise","resolve","reject","launchWebAuthFlow","url","interactive","runtime","lastError","message","urlFragment","urlParams","success","method","tokenStatus","login","scopes","join","expiresIn","tokenExpiry","parseInt","storage","local","warn","userResponse","fetch","ok","status","userInfo","json","tokenInfoResponse","tokenInfo","tokenScopes","includes","logout","headers","remove","validateToken","checkTokenPermissions","hasPermissions","requiredScopes","every","renewAuthentication","clearError","updateUser","userData","name","partialize","currentTab","chatHistory","isProcessing","settings","theme","language","autoAnalyze","notifications","setCurrentTab","tab","getCurrentTabInfo","tabs","query","active","currentWindow","addMessage","newMessage","id","timestamp","toISOString","clearChatHistory","updateLastMessage","messageId","updates","map","msg","setProcessing","updateSettings","newSettings","resetSettings","analyzeCurrentPage","results","sendMessage","action","analysisMessage","type","sender","content","title","errorMessage","exportChatHistory","dataStr","JSON","stringify","dataBlob","Blob","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","importChatHistory","jsonData","history","parse","AI_PROVIDERS","openai","models","anthropic","google","authLoading","authError","useAuthStore","useAppStore","aiProvider","selectedModel","apiKey","tempAiProvider","tempSelectedModel","tempApiKey","isValidatingApi","apiValidationStatus","validationMessage","hasUnsavedChanges","aiProviders","handleTempProviderChange","handleTempModelChange","handleTempApiKeyChange","testApiConnection","saveConfiguration","resetToDefaults","useAIConfig","setAiProvider","useState","setSelectedModel","setApiKey","setTempAiProvider","setTempSelectedModel","setTempApiKey","setIsValidatingApi","setApiValidationStatus","setValidationMessage","setHasUnsavedChanges","useEffect","initializeDefaults","defaultProvider","defaultModel","savedProvider","localStorage","getItem","savedModel","savedApiKey","validProvider","validModel","setItem","saveAiConfig","provider","model","key","hasApiKey","trim","response","requestBody","messages","role","max_tokens","temperature","body","_errorData$error","errorData","statusText","data","choices","_errorData$error2","text","contents","parts","generationConfig","maxOutputTokens","_errorData$error3","candidates","newProvider","firstModel","newModel","newApiKey","removeItem","isGoogleDocs","setIsGoogleDocs","checkAuth","checkGoogleDocs","isGoogleDocsUrl","_jsx","className","children","_jsxs","_Fragment","viewBox","fill","d","src","picture","alt","onClick","result","token","htmlFor","value","onChange","e","target","placeholder","disabled","defaultChecked","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","render","React","App","reportWebVitals","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","splice","r","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}